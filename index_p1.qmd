---
title: "Proyecto de procesamiento"
format: 
  html:
    page-layout: custom
    theme: litera    
    margin-top: 40px
    margin-left: 40px
    margin-bottom: 15px        
    margin-right: 15px
server: shiny
---

```{r}
#| label: carga-paquetes
#| context: setup
#| warning: false
#| message: false
#| code-fold: true

# Carga de paquetes
library(tidyverse)
library(DT)
library(sf)
library(rgdal)
library(raster)
library(terra)
library(leaflet)
library(leaflet.extras)
library(leafem)
library(viridisLite)
library(plotly)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(readr)
library(viridisLite)
library(shiny)
```

```{r}
#| label: carga-datos
#| context: data
#| code-fold: true

# carga de datos

areas_conservacion <-
  st_read(
    dsn = "areaconservacion.geojson",
    quiet = TRUE 
  )

areas_conservacion <-
  areas_conservacion |>
  st_transform(4326)

orquideas <-
  st_read(
    "orquideas.csv",
    options = c(
      "X_POSSIBLE_NAMES=decimalLongitude", 
      "Y_POSSIBLE_NAMES=decimalLatitude"   
    ),
    quiet = TRUE
  )

st_crs(orquideas) <- 4326


# Union entre areas de conservacion y orquideas

orquideas_union_areas_conservacion <- 
  st_join(
    x = orquideas,
    y = dplyr::select(areas_conservacion, nombre_ac), 
    join = st_within
  )

# Riquezas de registros

riqueza_orquideas_areas_conservacion_registros <- 
  orquideas_union_areas_conservacion |>
  st_drop_geometry() |>
  group_by(nombre_ac) |>
  summarize(riqueza_orquideas_areas_conservacion_registros = n_distinct(species, na.rm = TRUE))

# Union no espacial de orquideas con el dataframe de riqueza

areas_conservacion_union_riqueza_orquideas_registros <- 
  left_join(
    x = areas_conservacion,
    y = riqueza_orquideas_areas_conservacion_registros,
    by = "nombre_ac"
  ) |>
  replace_na(list(riqueza_orquideas_areas_conservacion_registros = 0))


```

```{r}
#| label: panel-widgets-entrada
#| panel: sidebar
#| warning: false
#| message: false


# Lista ordenada de areas de conservacion

lista_areasc <- unique(orquideas_union_areas_conservacion$nombre_ac)
lista_areasc <- c("todos", lista_areasc)


radioButtons(
  inputId = "ac",
  label = "Areas de Conservacion",
  choices = lista_areasc, 
  selected = "todos", 
  inline = FALSE,
  width = '400px',
  choiceNames = lista_areasc,
  choiceValues = "todos"
)


sliderInput(
  inputId = "slider",
  label = "Año",
  min = 1830,
  max = 2023,
  value = 2000,
  step = NULL,
  round = FALSE,
  ticks = TRUE,
  animate = FALSE,
  width = NULL,
  sep = ",",
  pre = NULL,
  post = NULL,
  timeFormat = NULL,
  timezone = NULL,
  dragRange = TRUE
)

# Vector ordenado de especies
lista_especies <- unique(orquideas$species)
lista_especies <- sort(lista_especies)
lista_especies <- c("Todas", lista_especies)

# Selector de especies
selectInput(
  inputId = "especie",
  label = "Especie",
  choices = lista_especies,
  selected = "Todas"
)
```

```{r}
#| label: panel-widgets-salida
#| panel: center
#| warning: false
#| message: false

h3("Distribución geoespacial")
HTML("<p>")

leafletOutput(
	outputId = "mapa"
)

# Encabezado de nivel 3
h3("Registros de presencia")
# Linea vacía
HTML("<p>")


# Widget de tabla interactiva
dataTableOutput(
	outputId =  "tabla" # identificador del widget
)

h3("Registros de presencia por especie")
HTML("<p>")
plotlyOutput(
	outputId = "grafico"
)
```


```{r}
#| label: servidor
#| context: server
#| warning: false
#| message: false

# Función reactiva para filtrar los registros de presencia de Orquideas

filtrar_orquideas <- reactive({
  orquideas_filtrados <- orquideas
  
  # Se realiza el filtro, solamente si el usario ha seleccionado 
  # una opción diferente a "Todas" en la lista de selección de especies
  if (input$especie != "Todas") {
    orquideas_filtrados <-
    orquideas |>
      filter(species == input$especie)
  }
  
   return( orquideas_filtrados)
}) 
  
# Función reactiva para filtrar las areas de conservacion

filtrar_orquideas <- reactive({
  orquideas_filtrados_ac <- orquideas_union_areas_conservacion
  
  # Filtro de areas de conservacion
  
  if (input$ac != "todos") {
  	orquideas_filtrados_ac <-
  		orquideas_union_areas_conservacion |>
  		filter(nombre_ac == input$ac)
  }

  return(orquideas_filtrados_ac )
})

# Tabla interactiva de registros de presencia
output$tabla <- renderDataTable({
  orquideas <- filtrar_orquideas()
  
  # Tabla interactiva
  orquideas_union_areas_conservacion |>
    st_drop_geometry() |>
    select(species, nombre_ac, year) |>
    datatable(
    	rownames = FALSE,
      colnames = c("Especie", "Area de Conservacion", "Fecha"),
      options = list(
      	pageLength = 5,
        language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Spanish.json')
      )
    )
})

# Paleta de colores de riqueza de especies de orquideas

colores_riqueza_especies_orquideas <-
  colorNumeric(
    palette = "Reds",
    domain = areas_conservacion_union_riqueza_orquideas_registros$riqueza_orquideas_areas_conservacion_registros,
    na.color = "transparent"
  )

# Paleta de colores de especies de orquideas
colores_especies_orquideas <- colorFactor(
  palette = viridis(length(unique(orquideas$species))), 
  domain = orquideas$species
)
 

# Mapa interactivo de registros de presencia
output$mapa <- renderLeaflet({
	# Filtrado del conjunto de datos
  orquideas <- filtrar_orquideas()
  
leaflet() |>
  setView(
    lng = -84.19452,
    lat = 9.572735,
    zoom = 7) |>
  addTiles(group = "Mapa general (OpenStreetMap)") |>
  addProviderTiles(
    providers$Esri.WorldImagery, 
    group = "ImC!genes satelitales (ESRI World Imagery)"
  ) |> 
  addPolygons(
    data = areas_conservacion_union_riqueza_orquideas_registros,
    fillColor = ~ colores_riqueza_especies_orquideas(areas_conservacion_union_riqueza_orquideas_registros$riqueza_orquideas_areas_conservacion_registros),
    fillOpacity = 0.8,
    color = "black",
    stroke = TRUE,
    weight = 1.0,
    popup = paste(
      paste("<strong>Area de Conservacion:</strong>", areas_conservacion$nombre_ac),
      paste("<strong>Registros de especies:</strong>", areas_conservacion_union_riqueza_orquideas_registros$riqueza_orquideas_areas_conservacion_registros),
      sep = '<br/>'
    ),
    group = "Registros de especies"
  ) |>
  addScaleBar(
    position = "bottomleft", 
    options = scaleBarOptions(imperial = FALSE)
  ) |>    
  addLegend(
    position = "bottomleft",
    pal = colores_riqueza_especies_orquideas,
    values = areas_conservacion_union_riqueza_orquideas_registros$riqueza_orquideas_areas_conservacion_registros,
    group = "registros de especies",
    title = "Registros de especies"
  ) |>
  addCircleMarkers(
    data = orquideas,
    stroke = F,
    radius = 4,
    fillColor = ~colores_especies_orquideas(orquideas$species),
    fillOpacity = 1.0,
    popup = paste(
      paste0("<strong>Especie: </strong>", orquideas$species),
      paste0("<strong>Localidad: </strong>", orquideas$locality),
      paste0("<strong>Fecha: </strong>", orquideas$eventDate),
      paste0("<strong>Fuente: </strong>", orquideas$institutionCode),
      paste0("<a href='", orquideas$occurrenceID, "'>MC!s informaciC3n</a>"),
      sep = '<br/>'
    ),    
    group = "Registros de presencia"
  ) |>  
  addLegend(
    position = "bottomright",    
    pal = colores_especies_orquideas,
    values = orquideas$species,
    title = "Especies",
    group = "Registros de presencia"    
  ) |>  
  addLayersControl(
    baseGroups = c(
      "Mapa general (OpenStreetMap)", 
      "ImC!genes satelitales (ESRI World Imagery)"
    ),
    overlayGroups = c(
      "Riqueza de especies",
      "Registros de presencia"
    )
  ) |>
  addResetMapButton() |>
  addSearchOSM() |>
  addMouseCoordinates() |>
  addFullscreenControl() |>
  hideGroup("Registros de presencia") 
})

output$grafico <- renderPlotly({
  orquideas <- filtrar_orquideas()	
  
grafico <- riqueza_orquideas_areas_conservacion_registros |>
  ggplot(aes(x = reorder(nombre_ac,-riqueza_orquideas_areas_conservacion_registros), y = riqueza_orquideas_areas_conservacion_registros)) +
  geom_bar(stat = "identity", fill = "pink",
     aes(
      text = paste0(
        "Area de conservacion ", nombre_ac, "\n",
        "Registros: ", riqueza_orquideas_areas_conservacion_registros)
      )
    ) +
  coord_flip() + 
  ggtitle("Registros de presencia de orquídeas en áreas de conservación") +
  xlab("Registros") +
  ylab("Area de conservacion") +
  labs(caption = "Fuente: SINAC") +
  theme_dark() 
  
  ggplotly(grafico, tooltip = "text") |>
  	config(locale = "es")
  
})
```
